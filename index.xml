<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Botahamec</title>
    <link>https://botahamec.github.io/</link>
    <description>Recent content on Botahamec</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 02 Jun 2020 10:13:42 -0400</lastBuildDate>
    
	<atom:link href="https://botahamec.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>New Website! Hooray!</title>
      <link>https://botahamec.github.io/posts/20_06_02_new_site/</link>
      <pubDate>Tue, 02 Jun 2020 10:13:42 -0400</pubDate>
      
      <guid>https://botahamec.github.io/posts/20_06_02_new_site/</guid>
      <description>Hello, everyone! Welcome to my new site. If you&amp;rsquo;ve seen the old one, then you know that looked remarkably terrible. Not only did it look like a dump, it was horrible to work with. Have you ever tried doing pure HTML code blocks? It&amp;rsquo;s a pain. Now that issue is fixed by using MARKDOWN! Look at this:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  fn main() { const MAX_NUM = 40; let mut a = 0; let mut b = 1; let mut c; for _i in 0.</description>
    </item>
    
    <item>
      <title>chalk-rs</title>
      <link>https://botahamec.github.io/projects/chalk_rs/</link>
      <pubDate>Wed, 06 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://botahamec.github.io/projects/chalk_rs/</guid>
      <description>A crate for terminal colors and styles
1 2 3 4  use chalk_rs::Chalk; let mut chalk = Chalk::new(); chalk.red().println(&amp;amp;&amp;#34;This text is red&amp;#34;); chalk.bold().println(&amp;amp;&amp;#34;Now it&amp;#39;s red AND bold&amp;#34;);   That&amp;rsquo;s an example of basic color. There are three types of color in chalk: BasicChalk, AnsiChalk, and RgbChalk.
1 2 3 4  use chalk_rs::Chalk; let mut chalk = Chalk::new(); chalk.ansi(56).println(&amp;amp;&amp;#34;Purple-ish&amp;#34;); chalk.rgb(25, 125, 63).println(&amp;amp;&amp;#34;This color is ugly&amp;#34;);   Chalk can aldo do styling!</description>
    </item>
    
    <item>
      <title>Pronoun Testing Grounds</title>
      <link>https://botahamec.github.io/projects/pronoun_test/</link>
      <pubDate>Fri, 24 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://botahamec.github.io/projects/pronoun_test/</guid>
      <description>https://botahamec.github.io/pronoun_test
About This project was created for 43 North&amp;rsquo;s Code:Buffalo hackathon. It&amp;rsquo;s goal is to help people questioning their gender to try different sets of pronouns and see how they like them. This is similar to the technique of trying out names at Starbucks. It&amp;rsquo;s inspired by the Pronoun Dressing Room, which unfortunately has a limited number of stories. This version creates a new story each time.
How it Works The webpage uses HTML, CSS, and TypeScript.</description>
    </item>
    
    <item>
      <title>Elp</title>
      <link>https://botahamec.github.io/projects/elp/</link>
      <pubDate>Sun, 08 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://botahamec.github.io/projects/elp/</guid>
      <description>A helper for git to make some mundane tasks simpler. When you create an empty Github repository normally, you need to do five commands to get your local folder on the remote repository. This application simplifies things dramatically by giving commands which do these things for you automatically.
Building In order to build this, you&amp;rsquo;ll need to have Cargo (the Rust compiler) and Git pre-installed.
 Clone the repository git clone https://github.</description>
    </item>
    
  </channel>
</rss>